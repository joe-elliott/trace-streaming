// protoc -I pkg/blergpb/ pkg/blergpb/blerg.proto --go_out=plugins=grpc:pkg/blergpb
// protoc -I/usr/local/include -I. -I$GOPATH/src -I$GOPATH/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis --go_out=plugins=grpc:. pkg/blergpb/blerg.proto
// protoc -I/usr/local/include -I. -I$GOPATH/src -I$GOPATH/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis --grpc-gateway_out=logtostderr=true:. pkg/blergpb/your_service.proto

syntax="proto3";

package blergpb;

import "google/api/annotations.proto";

service SpanStream {
  rpc QuerySpans(SpanRequest) returns (stream SpanResponse) {
    option (google.api.http) = {
      post: "/v1/stream/spans"
      body: "*"
    };
  };
  rpc QueryTraces(TraceRequest) returns (stream SpanResponse) {
    option (google.api.http) = {
      post: "/v1/stream/traces"
      body: "*"
    };
  };
}

message StreamRequest {
    int32 requestedBatchSize = 1;
    int32 requestedRate = 2;
}

message TraceRequest {
  StreamRequest params = 1;
  bool crossesProcessBoundaries = 2;
}

message SpanRequest {
  StreamRequest params = 1;
}

message SpanResponse {  
    int32 dropped = 1;
    repeated Span spans = 2;
}

message Span {
  bytes traceID = 1;
  bytes spanID = 2;
  bytes parentSpanID = 3;
  string processName = 4;
  string operationName = 5;
  int64 startTime = 6;
  int64 duration = 7;

  ParentSpan parent = 8;
}

message ParentSpan {
  string processName = 1;
  string operationName = 2;
  int64 startTime = 3;
  int64 duration = 4;
}